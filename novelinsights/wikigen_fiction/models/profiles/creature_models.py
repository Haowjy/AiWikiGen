# generated by datamodel-codegen:
#   filename:  concept_schema.json
#   timestamp: 2024-10-15T01:41:02+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional
import jsonref

from pydantic import BaseModel, Field

class CreatureModel(BaseModel):
    class Config:
        extra = 'forbid'

    name: str = Field(..., description='The name or title of the creature')
    aliases: Optional[List[str]] = Field(
        None, description='Alternative names or titles for the creature'
    )
    description: str = Field(
        ...,
        description='A detailed description of the creature, including its physical appearance, behavior, and abilities. For longer descriptions, use markdown with headers and subheaders to organize.',
    )
    origin: Optional[str] = Field(
        None,
        description='Information about the origins, history, and context of the creature within the story. For longer descriptions, use markdown with headers and subheaders to organize.',
    )
    habitat: Optional[str] = Field(
        None,
        description='Description of the natural environment or habitats where the creature is typically found',
    )
    behavior: Optional[str] = Field(
        None,
        description='Patterns of behavior, interactions, or habits exhibited by the creature'
    )
    significance: str = Field(
        ...,
        description='The creatureâ€™s importance to the plot and its impact on the story and characters',
    )
    def to_json_schema():
        ret = jsonref.replace_refs(super().model_json_schema(), proxies=False)
        del ret['$defs']
        return ret